commit b35c0bf5585a551c1f6c155b9335d26d5ee20744
Author: Seth Forshee <seth.forshee@canonical.com>
Date:   Tue Apr 26 14:36:29 2016 -0500

    UBUNTU: SAUCE: (namespace) fs: Allow superblock owner to access do_remount_sb()
    
    Superblock level remounts are currently restricted to global
    CAP_SYS_ADMIN, as is the path for changing the root mount to
    read only on umount. Loosen both of these permission checks to
    also allow CAP_SYS_ADMIN in any namespace which is privileged
    towards the userns which originally mounted the filesystem.
    
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>
    Acked-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Acked-by: Serge Hallyn <serge.hallyn@canonical.com>

diff --git a/fs/namespace.c b/fs/namespace.c
index d18deb4c410b..2d0508f536b5 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1589,7 +1589,7 @@ static int do_umount(struct mount *mnt, int flags)
 		 * Special case for "unmounting" root ...
 		 * we just try to remount it readonly.
 		 */
-		if (!capable(CAP_SYS_ADMIN))
+		if (!ns_capable(sb->s_user_ns, CAP_SYS_ADMIN))
 			return -EPERM;
 		down_write(&sb->s_umount);
 		if (!sb_rdonly(sb))
@@ -2327,7 +2327,7 @@ static int do_remount(struct path *path, int ms_flags, int sb_flags,
 	down_write(&sb->s_umount);
 	if (ms_flags & MS_BIND)
 		err = change_mount_flags(path->mnt, ms_flags);
-	else if (!capable(CAP_SYS_ADMIN))
+	else if (!ns_capable(sb->s_user_ns, CAP_SYS_ADMIN))
 		err = -EPERM;
 	else
 		err = do_remount_sb(sb, sb_flags, data, 0);
