commit 936cbf5185103cf3f6345b84d3d05d65fc36d2f1
Author: John Johansen <john.johansen@canonical.com>
Date:   Wed Sep 27 03:08:55 2017 -0400

    UBUNTU: SAUCE: LSM stacking: add stacking support to apparmor network hooks
    
    The stacking patches weren't developed against apparmor networking hooks.
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

diff --git a/security/apparmor/include/net.h b/security/apparmor/include/net.h
index 0ae45240c352..d378b5fde4fa 100644
--- a/security/apparmor/include/net.h
+++ b/security/apparmor/include/net.h
@@ -17,6 +17,7 @@
 
 #include <net/sock.h>
 #include <linux/path.h>
+#include <linux/lsm_hooks.h>
 
 #include "apparmorfs.h"
 #include "label.h"
@@ -56,7 +57,16 @@ struct aa_sk_ctx {
 	struct path path;
 };
 
-#define SK_CTX(X) ((X)->sk_security)
+extern struct lsm_blob_sizes apparmor_blob_sizes;
+static inline struct aa_sk_ctx *apparmor_sock(const struct sock *sk)
+{
+#ifdef CONFIG_SECURITY_STACKING
+	return sk->sk_security + apparmor_blob_sizes.lbs_sock;
+#else
+	return sk->sk_security;
+#endif
+}
+#define SK_CTX(X) apparmor_sock(X)
 #define SOCK_ctx(X) SOCK_INODE(X)->i_security
 #define DEFINE_AUDIT_NET(NAME, OP, SK, F, T, P)				  \
 	struct lsm_network_audit NAME ## _net = { .sk = (SK),		  \
diff --git a/security/apparmor/lsm.c b/security/apparmor/lsm.c
index e3178d84421b..9ddd1c418343 100644
--- a/security/apparmor/lsm.c
+++ b/security/apparmor/lsm.c
@@ -748,13 +748,7 @@ static int apparmor_task_kill(struct task_struct *target, struct siginfo *info,
  */
 static int apparmor_sk_alloc_security(struct sock *sk, int family, gfp_t flags)
 {
-	struct aa_sk_ctx *ctx;
-
-	ctx = kzalloc(sizeof(*ctx), flags);
-	if (!ctx)
-		return -ENOMEM;
-
-	SK_CTX(sk) = ctx;
+	/* allocated and cleared by LSM */
 
 	return 0;
 }
@@ -766,11 +760,13 @@ static void apparmor_sk_free_security(struct sock *sk)
 {
 	struct aa_sk_ctx *ctx = SK_CTX(sk);
 
-	SK_CTX(sk) = NULL;
 	aa_put_label(ctx->label);
+	ctx->label = NULL;
 	aa_put_label(ctx->peer);
+	ctx->peer = NULL;
 	path_put(&ctx->path);
-	kfree(ctx);
+	ctx->path.dentry = NULL;
+	ctx->path.mnt = NULL;
 }
 
 /**
@@ -1151,6 +1147,7 @@ static void apparmor_sock_graft(struct sock *sk, struct socket *parent)
 struct lsm_blob_sizes apparmor_blob_sizes = {
 	.lbs_cred = sizeof(struct aa_task_ctx),
 	.lbs_file = sizeof(struct aa_file_ctx),
+	.lbs_sock = sizeof(struct aa_sk_ctx),
 };
 
 static struct security_hook_list apparmor_hooks[] __lsm_ro_after_init = {
