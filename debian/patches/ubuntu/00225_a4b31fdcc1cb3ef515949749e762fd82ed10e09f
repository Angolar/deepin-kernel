commit a4b31fdcc1cb3ef515949749e762fd82ed10e09f
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Aug 31 16:34:12 2017 -0700

    UBUNTU: SAUCE: LSM stacking: fixup procsfs: add smack subdir to attrs
    
    The patch that adds the smack subdirs also changes how set_procattr
    is handled. It makes the assumption that each LSM will attempt
    to handle the context written in turn and return ENOENT, if
    the LSM doesn't handle the context and another should try.
    
    This is wrong in two ways, LSMs may return ENOENT as an error for
    a context that is valid but is not present in currently loaded
    policy, and the code is based on earlier versions where each
    LSM is tried in turn.
    
    Under the current patchset there is the concept of the current LSM
    which will be used by applications using the old interfaces, to
    ensure those interfaces which were not designed for multiple LSM
    input/out only ever have to deal with a single LSM.
    
    Fixes: 86400b03f812 ("procfs: add smack subdir to attrs")
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Seth Forshee <seth.forshee@canonical.com>

diff --git a/security/security.c b/security/security.c
index 0c5c92fefb63..b25b2e660e56 100644
--- a/security/security.c
+++ b/security/security.c
@@ -1743,7 +1743,7 @@ int security_getprocattr(struct task_struct *p, const char *lsm, char *name,
 		if (lsm != NULL && strcmp(lsm, hp->lsm))
 			continue;
 		rc = hp->hook.getprocattr(p, name, value);
-		if (rc != -ENOENT)
+		if (rc != -ENOSYS)
 			return rc;
 	}
 	return -EINVAL;
@@ -1830,7 +1830,7 @@ int security_setprocattr(const char *lsm, const char *name, void *value,
 		if (lsm != NULL && strcmp(lsm, hp->lsm))
 			continue;
 		rc = hp->hook.setprocattr(name, value, size);
-		if (rc != -ENOENT)
+		if (rc)
 			return rc;
 	}
 	return -EINVAL;
