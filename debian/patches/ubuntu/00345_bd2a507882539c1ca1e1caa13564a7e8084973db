commit bd2a507882539c1ca1e1caa13564a7e8084973db
Author: John Johansen <john.johansen@canonical.com>
Date:   Thu Aug 18 16:42:34 2016 -0700

    apparmor: add more assertions for updates/merges to help catch errors
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>

diff --git a/security/apparmor/label.c b/security/apparmor/label.c
index 6c76628..738fe52 100644
--- a/security/apparmor/label.c
+++ b/security/apparmor/label.c
@@ -1061,8 +1061,11 @@ static struct aa_label *label_merge_insert(struct aa_label *new,
 	AA_BUG(new->size < a->size + b->size);
 
 	label_for_each_in_merge(i, a, b, next) {
+		AA_BUG(!next);
 		if (profile_is_stale(next)) {
 			new->vec[k] = aa_get_newest_profile(next);
+			AA_BUG(!new->vec[k]->label.proxy);
+			AA_BUG(!new->vec[k]->label.proxy->label);
 			if (next->label.proxy != new->vec[k]->label.proxy)
 				invcount++;
 			k++;
@@ -2007,7 +2010,11 @@ static struct aa_label *__label_update(struct aa_label *label)
 	ls = labels_set(label);
 	write_lock_irqsave(&ls->lock, flags);
 	for (i = 0; i < label->size; i++) {
+		AA_BUG(!label->vec[i]);
 		new->vec[i] = aa_get_newest_profile(label->vec[i]);
+		AA_BUG(!new->vec[i]);
+		AA_BUG(!new->vec[i]->label.proxy);
+		AA_BUG(!new->vec[i]->label.proxy->label);
 		if (new->vec[i]->label.proxy != label->vec[i]->label.proxy)
 			invcount++;
 	}
