commit 32dc9f5af768b9f20fb9fccab28ac053d01e437d
Author: John Johansen <john.johansen@canonical.com>
Date:   Mon May 23 02:31:04 2016 -0700

    apparmor: fix: Rework the iter loop for label_update
    
    ensure that label_update works with unterminated vectors
    
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Signed-off-by: Leann Ogasawara <leann.ogasawara@canonical.com>

diff --git a/security/apparmor/label.c b/security/apparmor/label.c
index ce150a8..6c76628 100644
--- a/security/apparmor/label.c
+++ b/security/apparmor/label.c
@@ -1991,10 +1991,8 @@ static struct aa_label *__label_update(struct aa_label *label)
 {
 	struct aa_label *new, *tmp;
 	struct aa_labelset *ls;
-	struct aa_profile *p;
-	struct label_it i;
 	unsigned long flags;
-	int invcount = 0;
+	int i, invcount = 0;
 
 	AA_BUG(!label);
 	AA_BUG(!mutex_is_locked(&labels_ns(label)->lock));
@@ -2008,9 +2006,9 @@ static struct aa_label *__label_update(struct aa_label *label)
 	 */
 	ls = labels_set(label);
 	write_lock_irqsave(&ls->lock, flags);
-	label_for_each(i, label, p) {
-		new->vec[i.i] = aa_get_newest_profile(p);
-		if (new->vec[i.i]->label.proxy != p->label.proxy)
+	for (i = 0; i < label->size; i++) {
+		new->vec[i] = aa_get_newest_profile(label->vec[i]);
+		if (new->vec[i]->label.proxy != label->vec[i]->label.proxy)
 			invcount++;
 	}
 
