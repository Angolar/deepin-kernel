commit 3460cb1f82e3ab4ccfb2d526dcf308a345e4b052
Author: Yang Bo <yangbo@deepin.com>
Date:   Fri Nov 17 16:33:01 2017 +0800

    UBUNTU: SAUCE: Clear Linux: bootstats: add printk's to measure boot time in more detail
    
    Few distro-tweaks to add printk's to visualize boot time better
    
    Author:    Arjan van de Ven <arjan@linux.intel.com>
    
    Signed-off-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Yang Bo <yangbo@deepin.com>

diff --git a/arch/x86/kernel/alternative.c b/arch/x86/kernel/alternative.c
index 3344d3382..c0722d126 100644
--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@ -637,7 +637,9 @@ void __init alternative_instructions(void)
 	 * patching.
 	 */
 
+	printk("Applying alternatives\n");
 	apply_alternatives(__alt_instructions, __alt_instructions_end);
+	printk("Applying alternatives done\n");
 
 #ifdef CONFIG_SMP
 	/* Patch to UP if other cpus not imminent. */
@@ -648,6 +650,8 @@ void __init alternative_instructions(void)
 					    _text, _etext);
 	}
 
+	printk("Applying alternatives smp done\n");
+
 	if (!uniproc_patched || num_possible_cpus() == 1)
 		free_init_pages("SMP alternatives",
 				(unsigned long)__smp_locks,
diff --git a/drivers/base/firmware_class.c b/drivers/base/firmware_class.c
index 67d98ffc3..f7fc4ef77 100644
--- a/drivers/base/firmware_class.c
+++ b/drivers/base/firmware_class.c
@@ -1266,6 +1266,7 @@ request_firmware(const struct firmware **firmware_p, const char *name,
 {
 	int ret;
 
+	printk("request_firmware: %s\n", name);
 	/* Need to pin this module until return */
 	__module_get(THIS_MODULE);
 	ret = _request_firmware(firmware_p, name, device, NULL, 0,
diff --git a/init/main.c b/init/main.c
index d1ba883d3..c67d2ad0d 100644
--- a/init/main.c
+++ b/init/main.c
@@ -799,7 +799,8 @@ static int __init_or_module do_one_initcall_debug(initcall_t fn)
 	unsigned long long duration;
 	int ret;
 
-	printk(KERN_DEBUG "calling  %pF @ %i\n", fn, task_pid_nr(current));
+	printk(KERN_DEBUG "calling  %pF @ task %i\n", fn, task_pid_nr(current));
+	printk(KERN_DEBUG "calling  %pF @ cpu %i\n", fn, raw_smp_processor_id());
 	calltime = local_clock();
 	ret = fn();
 	rettime = local_clock();
diff --git a/kernel/kmod.c b/kernel/kmod.c
index bc6addd91..0ba503bf7 100644
--- a/kernel/kmod.c
+++ b/kernel/kmod.c
@@ -77,6 +77,8 @@ static int call_modprobe(char *module_name, int wait)
 		NULL
 	};
 
+	printk("call_modprobe: %s   %i \n", module_name, wait);
+
 	char **argv = kmalloc(sizeof(char *[5]), GFP_KERNEL);
 	if (!argv)
 		goto out;
