commit 247f2cf2d230cbcade0be915e24d701653b0742f
Author: Yang Bo <yangbo@deepin.com>
Date:   Thu Feb 9 20:38:29 2017 +0800

    elantech: fw_version 0x5e1f00 doesn't support fast command.
    
    Signed-off-by: Yang Bo <yangbo@deepin.com>

diff --git a/drivers/input/mouse/elantech.c b/drivers/input/mouse/elantech.c
index db7d1d666..458d49ae9 100644
--- a/drivers/input/mouse/elantech.c
+++ b/drivers/input/mouse/elantech.c
@@ -29,6 +29,25 @@
 					fmt, ##__VA_ARGS__);		\
 	} while (0)
 
+static int elantech_buggy_firmware(const struct dmi_system_id *d)
+{
+	return 1;
+}
+
+static const struct dmi_system_id elantech_buggy_fw[] = {
+	{
+#if defined(CONFIG_DMI) && defined(CONFIG_X86)
+		.callback = elantech_buggy_firmware,
+		.ident = "LENOVO 80UN",
+		.matches = {
+			DMI_MATCH(DMI_SYS_VENDOR, "LENOVO"),
+			DMI_MATCH(DMI_PRODUCT_NAME, "80UN"),
+		},
+	},
+#endif
+	{ }
+};
+
 /*
  * Send a Synaptics style sliced query command
  */
@@ -135,6 +154,16 @@ static int elantech_read_reg(struct psmouse *psmouse, unsigned char reg,
 		break;
 	}
 
+	/* fw_version 0x5e1f00 don't support fast command */
+	if (etd->fw_version == 0x5e1f00 && rc) {
+		rc = 0;
+		if (psmouse_sliced_command(psmouse, ETP_REGISTER_READ) ||
+		    psmouse_sliced_command(psmouse, reg) ||
+		    ps2_command(&psmouse->ps2dev, param, PSMOUSE_CMD_GETINFO)) {
+			rc = -1;
+		}
+	}
+
 	if (rc)
 		psmouse_err(psmouse, "failed to read register 0x%02x.\n", reg);
 	else if (etd->hw_version != 4)
@@ -209,6 +238,17 @@ static int elantech_write_reg(struct psmouse *psmouse, unsigned char reg,
 		break;
 	}
 
+	/* fw_version 0x5e1f00 don't support fast command. */
+	if (etd->fw_version == 0x5e1f00 && rc) {
+		rc = 0;
+		if (psmouse_sliced_command(psmouse, ETP_REGISTER_WRITE) ||
+		    psmouse_sliced_command(psmouse, reg) ||
+		    psmouse_sliced_command(psmouse, val) ||
+		    ps2_command(&psmouse->ps2dev, NULL, PSMOUSE_CMD_SETSCALE11)) {
+			rc = -1;
+		}
+	}
+
 	if (rc)
 		psmouse_err(psmouse,
 			    "failed to write register 0x%02x with value 0x%02x.\n",
@@ -1090,8 +1130,9 @@ static int elantech_get_resolution_v4(struct psmouse *psmouse,
 				      unsigned int *y_res)
 {
 	unsigned char param[3];
+	struct elantech_data *etd = psmouse->private;
 
-	if (elantech_send_cmd(psmouse, ETP_RESOLUTION_QUERY, param))
+	if (etd->send_cmd(psmouse, ETP_RESOLUTION_QUERY, param))
 		return -1;
 
 	*x_res = elantech_convert_res(param[1] & 0x0f);
@@ -1597,6 +1638,11 @@ static int elantech_set_properties(struct elantech_data *etd)
 	etd->send_cmd = etd->hw_version >= 3 ? elantech_send_cmd :
 					       synaptics_send_cmd;
 
+	/* firmware 0x5e1f00 doesn't support fast command. */
+	if (etd->fw_version == 0x5e1f00) {
+		etd->send_cmd = synaptics_send_cmd;
+	}
+
 	/* Turn on packet checking by default */
 	etd->paritycheck = 1;
 
