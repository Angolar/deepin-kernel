commit 4f72a57b3a44ec41a8dd9277f07fc4efb2f41ea1
Author: Yang Bo <yangbo@deepin.com>
Date:   Mon Sep 26 17:27:41 2016 +0800

    Random hung up with bug acpi.
    
    set kernel parameter to pnpacpi=off libata.noacpi=1 pci=noacpi pci_acpi_glue=disable usbcore.noacpi=1 to test
    
    Signed-off-by: Yang Bo <yangbo@deepin.com>

diff --git a/arch/x86/kernel/acpi/boot.c b/arch/x86/kernel/acpi/boot.c
index e759076..355ff4e 100644
--- a/arch/x86/kernel/acpi/boot.c
+++ b/arch/x86/kernel/acpi/boot.c
@@ -65,6 +65,7 @@ int acpi_lapic;
 int acpi_ioapic;
 int acpi_strict;
 int acpi_disable_cmcff;
+int pci_acpi_glue_disabled;
 
 u8 acpi_sci_flags __initdata;
 int acpi_sci_override_gsi __initdata;
@@ -1625,6 +1626,15 @@ static int __init parse_pci(char *arg)
 }
 early_param("pci", parse_pci);
 
+static int __init parse_pci_acpi_glue(char *arg)
+{
+    if (arg && strcmp(arg, "disable") == 0)
+        pci_acpi_glue_disabled = 1;
+    return 0;
+}
+
+early_param("pci_acpi_glue", parse_pci_acpi_glue);
+
 int __init acpi_mps_check(void)
 {
 #if defined(CONFIG_X86_LOCAL_APIC) && !defined(CONFIG_X86_MPPARSE)
diff --git a/drivers/pci/pci-acpi.c b/drivers/pci/pci-acpi.c
index a32ba75..639d03b 100644
--- a/drivers/pci/pci-acpi.c
+++ b/drivers/pci/pci-acpi.c
@@ -18,6 +18,9 @@
 #include <linux/pm_qos.h>
 #include "pci.h"
 
+
+extern int pci_acpi_glue_disabled;
+
 /*
  * The UUID is defined in the PCI Firmware Specification available here:
  * https://www.pcisig.com/members/downloads/pcifw_r3_1_13Dec10.pdf
@@ -703,6 +706,9 @@ static int __init acpi_pci_init(void)
 		pcie_no_aspm();
 	}
 
+    if (pci_acpi_glue_disabled)
+        return 0;
+
 	ret = register_acpi_bus_type(&acpi_pci_bus);
 	if (ret)
 		return 0;
diff --git a/drivers/usb/core/usb.c b/drivers/usb/core/usb.c
index f8bbd0b..b9dd351 100644
--- a/drivers/usb/core/usb.c
+++ b/drivers/usb/core/usb.c
@@ -56,6 +56,9 @@ module_param(nousb, bool, 0444);
 core_param(nousb, nousb, bool, 0444);
 #endif
 
+static int noacpi;
+module_param_named(noacpi, noacpi, int, 0644);
+
 /*
  * for external read access to <nousb>
  */
@@ -1049,13 +1052,18 @@ static int __init usb_init(void)
 		pr_info("%s: USB support disabled\n", usbcore_name);
 		return 0;
 	}
+
+    if (noacpi)
+        pr_info("usb acpi glue disabled!\n");
+
 	usb_init_pool_max();
 
 	retval = usb_debugfs_init();
 	if (retval)
 		goto out;
 
-	usb_acpi_register();
+    if (!noacpi)
+	    usb_acpi_register();
 	retval = bus_register(&usb_bus_type);
 	if (retval)
 		goto bus_register_failed;
@@ -1090,7 +1098,8 @@ major_init_failed:
 bus_notifier_failed:
 	bus_unregister(&usb_bus_type);
 bus_register_failed:
-	usb_acpi_unregister();
+    if (!noacpi)
+	    usb_acpi_unregister();
 	usb_debugfs_cleanup();
 out:
 	return retval;
@@ -1112,7 +1121,8 @@ static void __exit usb_exit(void)
 	usb_hub_cleanup();
 	bus_unregister_notifier(&usb_bus_type, &usb_bus_nb);
 	bus_unregister(&usb_bus_type);
-	usb_acpi_unregister();
+    if (!noacpi)
+	    usb_acpi_unregister();
 	usb_debugfs_cleanup();
 }
 
